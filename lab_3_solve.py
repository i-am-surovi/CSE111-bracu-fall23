# -*- coding: utf-8 -*-
"""Lab 3 solve.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Nx5WD8SP7gIuNY5BwunlUeV1g3tsyGnc
"""

# Task 1  (i)
class MangoTree:
  height = 1
  number_of_mangoes = 0

  def __init__(self, variety):
    self.variety = variety


# Driver Code
mangoTree1= MangoTree("Gopalbhog")
# Display the details of the mango tree
print("=====================================")
print("Mango Tree Details:")
print(f"Variety: {mangoTree1.variety}")
print(f"Height: {mangoTree1.height} meter(s)")
print(f"Number of mangoes on the tree: {mangoTree1.number_of_mangoes}")
print("=====================================")
mangoTree2= MangoTree("Amrapali")
# Display the details of the mango tree
print("Mango Tree Details:")
print(f"Variety: {mangoTree2.variety}")
print(f"Height: {mangoTree2.height} meter(s)")
print(f"Number of mangoes on the tree: {mangoTree2.number_of_mangoes}")
print("=====================================")

# Task 1  (ii)
class MangoTree:
  height = 1
  number_of_mangoes = 0

  def __init__(self, variety):
    self.variety = variety

  def growthUpdate(self, year):
    print(f"Variety: {self.variety}")
    MangoTree.height += 3*year
    print(f"Height: {self.height} meter(s)")
    if self.variety == "Gopalbhog":
      MangoTree.number_of_mangoes = 10*MangoTree.height
      print(f"Number of mangoes on the tree: {self.number_of_mangoes}")
    elif self.variety == "Amrapali":
      MangoTree.number_of_mangoes = 15*MangoTree.height
      print(f"Number of mangoes on the tree: {self.number_of_mangoes}")


# Driver Code
print("Updated details after 5 years:")
mangoTree1= MangoTree("Gopalbhog")
print("=====================================")
mangoTree1.growthUpdate(5)
print("=====================================")
mangoTree2= MangoTree("Amrapali")
mangoTree2.growthUpdate(5)
print("=====================================")

# Task 2
class Customer:
  count = 0
  price = 0

  def __init__(self):
    print("Welcome to ABC Memorial Park")

  def buyTicket(self, name, age):
    if Customer.count < 3:
      if age > 10:
        Customer.price += 100
      else:
        Customer.price += 50
      print(f"Successfully purchased a ticket for {name}!")
      Customer.count += 1
    else:
      print("You can't buy more than 3 tickets")

  def showDetails(self):
    print(f"Amount of tickets: {Customer.count}")
    print(f"Total price: {Customer.price} Taka")
    Customer.count = 0
    Customer.price = 0


# Driver Code
print('1-------------------------')
customer1 = Customer()
print('2-------------------------')
customer1.buyTicket('Bob', 23)
customer1.buyTicket('Henry', 7)
customer1.buyTicket('Alexa', 30)
customer1.buyTicket('Jonas', 43)
print('3-------------------------')
customer1.showDetails()
print('4-------------------------')
customer2 = Customer()
print('5-------------------------')
customer2.buyTicket('Harry', 60)
customer2.buyTicket('Tomas', 28)
print('6-------------------------')
customer2.showDetails()

# Task 3
class GreenPhone():
  cA = 0
  cM = 0
  cU = 0

  def __init__(self,model,version,camera):
    self.model = model
    self.version = version
    self.camera = camera

  def showSpecification(self):
    print(f"Phone Company: GreenPhone")
    print(f"Model Name: {self.model}")
    print(f"Android Version: {self.version}")
    print(f"Number of Cameras: {self.camera}")

  def updatePhone(self):
    if self.model[0] == "A":
      if GreenPhone.cA < 2:
        self.version += 1
        GreenPhone.cA += 1
        print(f"Your phone Greenphone {self.model} is upgraded to Android Version: {self.version}.")
      else:
        print(f"Your phone Greenphone {self.model} is already up to date.")

    elif self.model[0] == "M":
      if GreenPhone.cM < 3:
        self.version += 1
        GreenPhone.cM += 1
        print(f"Your phone Greenphone {self.model} is upgraded to Android Version: {self.version}.")
      else:
        print(f"Your phone Greenphone {self.model} is already up to date.")

    elif self.model[0] == "U":
      if GreenPhone.cU < 5:
        self.version += 1
        GreenPhone.cU += 1
        print(f"Your phone Greenphone {self.model} is upgraded to Android Version: {self.version}.")
      else:
        print(f"Your phone Greenphone {self.model} is already up to date.")


# Driver Code
print('1=======================')
p1 = GreenPhone('A1', 12, 3)
p2 = GreenPhone('M11', 12, 4)
p3 = GreenPhone('U20', 12, 5)
p1.showSpecification()
print('2=======================')
p2.showSpecification()
print('3=======================')
p1.updatePhone()
print('4=======================')
p1.updatePhone()
p2.updatePhone()
p3.updatePhone()
print('5=======================')
p1.updatePhone()
p2.updatePhone()
p3.updatePhone()
print('6=======================')
p2.updatePhone()
p3.updatePhone()
print('7=======================')
p1.showSpecification()
p3.showSpecification()

# Task 4

class Student:
    def __init__(self):
        self.name = None
        self.cgpa = 0.0
s1 = Student()
s2 = Student()
s3 = None
s1.name = "Student One"
s1.cgpa = 2.3
s3 = s1
s2.name = "Student Two"
s2.cgpa = s3.cgpa + 1
s3.name = "New Student"
print(s1.name)
print(s2.name)
print(s3.name)
print(s1.cgpa)
print(s2.cgpa)
print(s3.cgpa)
s3 = s2
s1.name = "old student"
s2.name = "older student"
s3.name = "oldest student"
s2.cgpa = s1.cgpa - s3.cgpa + 4.5
print(s1.name)
print(s2.name)
print(s3.name)
print(s1.cgpa)
print(s2.cgpa)
print(s3.cgpa)

# Task 5

class Test3:
    def __init__(self):
        self.sum, self.y = 0, 0
    def methodA(self):
        x, y = 2, 3
        msg = [0]
        msg[0] = 3
        y = self.y + msg[0]
        self.methodB(msg, msg[0])
        x = self.y + msg[0]
        self.sum = x + y + msg[0]
        print(x, y, self.sum)
    def methodB(self, mg2, mg1):
        x = 0
        self.y = self.y + mg2[0]
        x = x + 33 + mg1
        self.sum = self.sum + x + self.y
        mg2[0] = self.y + mg1
        mg1 = mg1 + x + 2
        print(x, self.y, self.sum)

# Driver Code
t3 = Test3()
t3.methodA()
t3.methodA()
t3.methodA()
t3.methodA()